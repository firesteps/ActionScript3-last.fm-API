/* Copyright (c) 2008 David White Copyright (c) 2010 Omar Valiev Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. @ignore */package fm.last.as3 {import flash.net.URLLoader;/** * The LFMTasteometer class provide method to call compare web service of last.fm. * * @includeExample LFMTasteometerExample.as */public class LFMTasteometer extends LFMBase {	/**	 * Constructor	 * @param session make calls to last.fm services.	 */	public function LFMTasteometer(session:ILFMSession) {		super(session);	}	/**	 * Get a Tasteometer score from two inputs, along with a list of shared artists. If	 * the input is a User or a Myspace URL, some additional information is returned.	 * @param type1 the first type of value to compare [user] | [artists] | [myspace].	 * @param type2 the second type of value to compare [user] | [artists] | [myspace].	 * @param value1 the first value to compare	 * [Last.fm username] | [Comma-separated artist names] | [MySpace profile URL].	 * @param value1 the second value to compare	 * [Last.fm username] | [Comma-separated artist names] | [MySpace profile URL].	 * @param limit the number of search results to be returned. Default is 5.	 * @return loader load response.	 */	public function compare(type1:String, type2:String, value1:String,	                        value2:String, limit:Number = NaN):URLLoader {		var variables:Object = {			method:'tasteometer.compare',			type1:type1,			type2:type2,			value1:value1,			value2:value2		}		if (!isNaN(limit))			variables.limit = limit;		return call(variables);	}}}